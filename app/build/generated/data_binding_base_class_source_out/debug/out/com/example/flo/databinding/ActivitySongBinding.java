// Generated by view binder compiler. Do not edit!
package com.example.flo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.flo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySongBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView songAlbum;

  @NonNull
  public final ImageButton songDown;

  @NonNull
  public final TextView songEndTime;

  @NonNull
  public final ImageButton songEq;

  @NonNull
  public final ImageView songInstagram;

  @NonNull
  public final ImageView songLike;

  @NonNull
  public final LinearLayout songLikeLayout;

  @NonNull
  public final ImageView songList;

  @NonNull
  public final ImageView songMiniplayer;

  @NonNull
  public final ImageButton songMore;

  @NonNull
  public final TextView songMusicLyrics01;

  @NonNull
  public final TextView songMusicLyrics02;

  @NonNull
  public final TextView songMusicTitle;

  @NonNull
  public final ImageView songNext;

  @NonNull
  public final ImageView songPause;

  @NonNull
  public final LinearLayout songPlayerLayout;

  @NonNull
  public final ImageView songPrevious;

  @NonNull
  public final View songProgressbarBackgroudView;

  @NonNull
  public final View songProgressbarView;

  @NonNull
  public final ImageView songRandom;

  @NonNull
  public final ImageView songRelated;

  @NonNull
  public final ImageView songRepeat;

  @NonNull
  public final ImageButton songSetting;

  @NonNull
  public final ImageView songSingerMore;

  @NonNull
  public final TextView songSingerName;

  @NonNull
  public final TextView songStartTime;

  @NonNull
  public final ImageView songUnlike;

  private ActivitySongBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView songAlbum,
      @NonNull ImageButton songDown, @NonNull TextView songEndTime, @NonNull ImageButton songEq,
      @NonNull ImageView songInstagram, @NonNull ImageView songLike,
      @NonNull LinearLayout songLikeLayout, @NonNull ImageView songList,
      @NonNull ImageView songMiniplayer, @NonNull ImageButton songMore,
      @NonNull TextView songMusicLyrics01, @NonNull TextView songMusicLyrics02,
      @NonNull TextView songMusicTitle, @NonNull ImageView songNext, @NonNull ImageView songPause,
      @NonNull LinearLayout songPlayerLayout, @NonNull ImageView songPrevious,
      @NonNull View songProgressbarBackgroudView, @NonNull View songProgressbarView,
      @NonNull ImageView songRandom, @NonNull ImageView songRelated, @NonNull ImageView songRepeat,
      @NonNull ImageButton songSetting, @NonNull ImageView songSingerMore,
      @NonNull TextView songSingerName, @NonNull TextView songStartTime,
      @NonNull ImageView songUnlike) {
    this.rootView = rootView;
    this.songAlbum = songAlbum;
    this.songDown = songDown;
    this.songEndTime = songEndTime;
    this.songEq = songEq;
    this.songInstagram = songInstagram;
    this.songLike = songLike;
    this.songLikeLayout = songLikeLayout;
    this.songList = songList;
    this.songMiniplayer = songMiniplayer;
    this.songMore = songMore;
    this.songMusicLyrics01 = songMusicLyrics01;
    this.songMusicLyrics02 = songMusicLyrics02;
    this.songMusicTitle = songMusicTitle;
    this.songNext = songNext;
    this.songPause = songPause;
    this.songPlayerLayout = songPlayerLayout;
    this.songPrevious = songPrevious;
    this.songProgressbarBackgroudView = songProgressbarBackgroudView;
    this.songProgressbarView = songProgressbarView;
    this.songRandom = songRandom;
    this.songRelated = songRelated;
    this.songRepeat = songRepeat;
    this.songSetting = songSetting;
    this.songSingerMore = songSingerMore;
    this.songSingerName = songSingerName;
    this.songStartTime = songStartTime;
    this.songUnlike = songUnlike;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySongBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySongBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_song, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySongBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.song_album;
      ImageView songAlbum = ViewBindings.findChildViewById(rootView, id);
      if (songAlbum == null) {
        break missingId;
      }

      id = R.id.song_down;
      ImageButton songDown = ViewBindings.findChildViewById(rootView, id);
      if (songDown == null) {
        break missingId;
      }

      id = R.id.song_end_time;
      TextView songEndTime = ViewBindings.findChildViewById(rootView, id);
      if (songEndTime == null) {
        break missingId;
      }

      id = R.id.song_eq;
      ImageButton songEq = ViewBindings.findChildViewById(rootView, id);
      if (songEq == null) {
        break missingId;
      }

      id = R.id.song_instagram;
      ImageView songInstagram = ViewBindings.findChildViewById(rootView, id);
      if (songInstagram == null) {
        break missingId;
      }

      id = R.id.song_like;
      ImageView songLike = ViewBindings.findChildViewById(rootView, id);
      if (songLike == null) {
        break missingId;
      }

      id = R.id.song_like_layout;
      LinearLayout songLikeLayout = ViewBindings.findChildViewById(rootView, id);
      if (songLikeLayout == null) {
        break missingId;
      }

      id = R.id.song_list;
      ImageView songList = ViewBindings.findChildViewById(rootView, id);
      if (songList == null) {
        break missingId;
      }

      id = R.id.song_miniplayer;
      ImageView songMiniplayer = ViewBindings.findChildViewById(rootView, id);
      if (songMiniplayer == null) {
        break missingId;
      }

      id = R.id.song_more;
      ImageButton songMore = ViewBindings.findChildViewById(rootView, id);
      if (songMore == null) {
        break missingId;
      }

      id = R.id.song_music_lyrics01;
      TextView songMusicLyrics01 = ViewBindings.findChildViewById(rootView, id);
      if (songMusicLyrics01 == null) {
        break missingId;
      }

      id = R.id.song_music_lyrics02;
      TextView songMusicLyrics02 = ViewBindings.findChildViewById(rootView, id);
      if (songMusicLyrics02 == null) {
        break missingId;
      }

      id = R.id.song_music_title;
      TextView songMusicTitle = ViewBindings.findChildViewById(rootView, id);
      if (songMusicTitle == null) {
        break missingId;
      }

      id = R.id.song_next;
      ImageView songNext = ViewBindings.findChildViewById(rootView, id);
      if (songNext == null) {
        break missingId;
      }

      id = R.id.song_pause;
      ImageView songPause = ViewBindings.findChildViewById(rootView, id);
      if (songPause == null) {
        break missingId;
      }

      id = R.id.song_player_layout;
      LinearLayout songPlayerLayout = ViewBindings.findChildViewById(rootView, id);
      if (songPlayerLayout == null) {
        break missingId;
      }

      id = R.id.song_previous;
      ImageView songPrevious = ViewBindings.findChildViewById(rootView, id);
      if (songPrevious == null) {
        break missingId;
      }

      id = R.id.song_progressbar_backgroud_view;
      View songProgressbarBackgroudView = ViewBindings.findChildViewById(rootView, id);
      if (songProgressbarBackgroudView == null) {
        break missingId;
      }

      id = R.id.song_progressbar_view;
      View songProgressbarView = ViewBindings.findChildViewById(rootView, id);
      if (songProgressbarView == null) {
        break missingId;
      }

      id = R.id.song_random;
      ImageView songRandom = ViewBindings.findChildViewById(rootView, id);
      if (songRandom == null) {
        break missingId;
      }

      id = R.id.song_related;
      ImageView songRelated = ViewBindings.findChildViewById(rootView, id);
      if (songRelated == null) {
        break missingId;
      }

      id = R.id.song_repeat;
      ImageView songRepeat = ViewBindings.findChildViewById(rootView, id);
      if (songRepeat == null) {
        break missingId;
      }

      id = R.id.song_setting;
      ImageButton songSetting = ViewBindings.findChildViewById(rootView, id);
      if (songSetting == null) {
        break missingId;
      }

      id = R.id.song_singer_more;
      ImageView songSingerMore = ViewBindings.findChildViewById(rootView, id);
      if (songSingerMore == null) {
        break missingId;
      }

      id = R.id.song_singer_name;
      TextView songSingerName = ViewBindings.findChildViewById(rootView, id);
      if (songSingerName == null) {
        break missingId;
      }

      id = R.id.song_start_time;
      TextView songStartTime = ViewBindings.findChildViewById(rootView, id);
      if (songStartTime == null) {
        break missingId;
      }

      id = R.id.song_unlike;
      ImageView songUnlike = ViewBindings.findChildViewById(rootView, id);
      if (songUnlike == null) {
        break missingId;
      }

      return new ActivitySongBinding((ConstraintLayout) rootView, songAlbum, songDown, songEndTime,
          songEq, songInstagram, songLike, songLikeLayout, songList, songMiniplayer, songMore,
          songMusicLyrics01, songMusicLyrics02, songMusicTitle, songNext, songPause,
          songPlayerLayout, songPrevious, songProgressbarBackgroudView, songProgressbarView,
          songRandom, songRelated, songRepeat, songSetting, songSingerMore, songSingerName,
          songStartTime, songUnlike);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
